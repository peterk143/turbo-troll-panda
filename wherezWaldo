#!/bin/bash

## find which machines DUDE is logged 
## onto and appends that hostname number 
## to a list on your localhost and
## prints to standard out

MINE=$HOSTNAME
BASE=`basename ${0}`
bold() {
    echo -e "\033[1m${1}\033[0m"
}

usage() {
    cat <<EOF

   Usage: ${BASE} [-o | --std-out] username

  -Options-
     -o, --std-out               outputs machine numbers to standard out

        `bold Example`:
              ${BASE} pkirkpat
              ${BASE} -o bmartin4
EOF
}

clear() {
    if [ -f ~/num ]; then
	rm ~/num
    fi
}

getHosts() {
    hosts=""
    for i in {1..9}; do
	nmap -P0 -p22 cseesystems0${i} |grep -q open
	if [ $? -eq 0 ]; then
	    hosts="${i} ${hosts}"
	fi
    done   
}

doWork() {
    for i in ${hosts}; do
	A=$(ssh -T CSEESYSTEMS0${i} "who | grep ${DUDE}")
	B=$(echo "$A" |wc -w)
	ssh -T CSEESYSTEMS0${i} "if [ ${B} -ne 0 ]; then echo \"0${i}\" |ssh ${MINE} \"cat >>num\"; fi"
    done 1>/dev/null
}

print() {
    if [ -f ~/num ]; then
	cat ~/num
    fi
}

clear
DUDE="fmurray1"
if [ $# -eq 0 ]; then
    getHosts
    doWork
    exit 0
elif [ $# -eq 1 ]; then
    case "${1}" in
	-h|--help) 
	    usage 
	    exit 0 ;;
	-o|--std-out) ;;  ## just here to grab input
	*) DUDE="${1}" 
	    getHosts
	    doWork
	    exit 0 ;;
    esac
elif [ $# -eq 2 ]; then
    case "${1}" in 
	-o|--std-out) DUDE="${2}" ;;
	*) echo "improper input, br0"
	    exit 1 ;;
    esac
fi

getHosts
doWork
print

exit 0
